[
	{
		"id": "131952da-5d1d-47f3-ab56-7c38e23cc64c",
		"title": "Grokking Algorithms, Second Edition",
		"slug": "grokking-algorithms-second-edition",
		"cover_image": "https://m.media-amazon.com/images/I/51Z7Zz10jlL._SX342_SY445_.jpg",
		"link_amazon": "https://www.amazon.com/Grokking-Algorithms-Second-Aditya-Bhargava/dp/1633438538",
		"customer_reviews_link": "https://www.amazon.com/Grokking-Algorithms-Second-Aditya-Bhargava/dp/1633438538#customerReviews",
		"subtitle": "2nd Edition",
		"release_date": "March 26, 2024",
		"rating": {
			"score": "4.9",
			"total_customer_reviews": "22"
		},
		"author": {
			"id": "d351bb64-0a6b-4369-8325-035e92fc252f",
			"name": "Aditya Y Bhargava",
			"slug": "aditya-y-bhargava"
		},
		"publisher": {
			"id": "0a133951-0f59-4b91-99eb-ed2a55cb3f3a",
			"name": "Manning",
			"slug": "manning"
		},
		"summary": "A friendly, fully-illustrated introduction to the most important computer programming algorithms.Master the most widely used algorithms and be fully prepared when you’re asked about them at your next job interview. With beautifully simple explanations, over 400 fun illustrations, and dozens of relevant examples, you’ll actually enjoy learning about algorithms with this fun and friendly guide! In Grokking Algorithms, Second Edition you will discover:  Search, sort, and graph algorithmsData structures such as arrays, lists, hash tables, trees, and graphsNP-complete and greedy algorithmsPerformance trade-offs between algorithmsExercises and code samples in every chapterOver 400 illustrations with detailed walkthroughs The first edition of Grokking Algorithms proved to over 100,000 readers that learning algorithms doesn't have to be complicated or boring! This revised second edition contains brand new coverage of trees, including binary search trees, balanced trees, B-trees and more. You’ll also discover fresh insights on data structure performance that takes account of modern CPUs. Plus, the book’s fully annotated code samples have been updated to Python 3.  Foreword by Daniel Zingaro. Purchase of the print book includes a free eBook in PDF and ePub formats from Manning Publications.  About the technology  The algorithms you use most often have already been discovered, tested, and proven. Grokking Algorithms, Second Edition makes it a breeze to learn, understand, and use them. With beautifully simple explanations, over 400 fun illustrations, and dozens of relevant examples, it’s the perfect way to unlock the power of algorithms in your everyday work and prepare for your next coding interview—no math required!  About the book  Grokking Algorithms, Second Edition teaches you important algorithms to speed up your programs, simplify your code, and solve common programming problems. Start with tasks like sorting and searching, then build your skills to tackle advanced problems like data compression and artificial intelligence. You’ll even learn to compare the performance tradeoffs between algorithms. Plus, this new edition includes fresh coverage of trees, NP-complete problems, and code updates to Python 3.  What's inside Search, sort, and graph algorithmsData structures such as arrays, lists, hash tables, trees, and graphsNP-complete and greedy algorithmsExercises and code samples in every chapter  About the reader  No advanced math or programming skills required.  About the author  Aditya Bhargava is a Software Engineer with a dual background in Computer Science and Fine Arts. He blogs on programming at adit.io. Table of Contents  1 Introduction to algorithms 2 Selection sort 3 Recursion 4 Quicksort 5 Hash tables 6 Beadth-first search 7 Trees 8 Balanced trees 9 Dijkstra’s algorithm 10 Greedy algorithms 11 Dynamic programming 12 k-nearest neighbors 13 where to go next   Read more",
		"created_at": "2024-06-01T16:32:45.491Z",
		"updated_at": null,
		"created_at_pt_br": "01/06/2024 13:32:45",
		"updated_at_pt_br": null
	},
	{
		"id": "f173b41c-1507-4087-95a5-dde8a6d22f6c",
		"title": "Introduction to Algorithms, fourth edition",
		"slug": "introduction-to-algorithms-fourth-edition",
		"cover_image": "https://m.media-amazon.com/images/I/41+aXH4mDbL._SX342_SY445_.jpg",
		"link_amazon": "https://www.amazon.com/Introduction-Algorithms-fourth-Thomas-Cormen/dp/026204630X",
		"customer_reviews_link": "https://www.amazon.com/Introduction-Algorithms-fourth-Thomas-Cormen/dp/026204630X#customerReviews",
		"subtitle": "4th Edition",
		"release_date": "April 5, 2022",
		"rating": {
			"score": "4.4",
			"total_customer_reviews": "555"
		},
		"author": {
			"id": "4db69091-4f15-45d9-9845-b1819fd0de5f",
			"name": "Thomas H. CormenCharles E. LeisersonRonald L. RivestClifford Stein",
			"slug": "thomas-h-cormencharles-e-leisersonronald-l-rivestclifford-stein"
		},
		"publisher": {
			"id": "d31df12b-869b-4894-aa85-cf4b60eb1266",
			"name": "The MIT Press",
			"slug": "the-mit-press"
		},
		"summary": "A comprehensive update of the leading algorithms text, with new material on matchings in bipartite graphs, online algorithms, machine learning, and other topics.Some books on algorithms are rigorous but incomplete; others cover masses of material but lack rigor. Introduction to Algorithms uniquely combines rigor and comprehensiveness. It covers a broad range of algorithms in depth, yet makes their design and analysis accessible to all levels of readers, with self-contained chapters and algorithms in pseudocode. Since the publication of the first edition, Introduction to Algorithms has become the leading algorithms text in universities worldwide as well as the standard reference for professionals. This fourth edition has been updated throughout.New for the fourth edition  New chapters on matchings in bipartite graphs, online algorithms, and machine learningNew material on topics including solving recurrence equations, hash tables, potential functions, and suffix arrays140 new exercises and 22 new problemsReader feedback–informed improvements to old problemsClearer, more personal, and gender-neutral writing styleColor added to improve visual presentationNotes, bibliography, and index updated to reflect developments in the fieldWebsite with new supplementary materialWarning: Avoid counterfeit copies of Introduction to Algorithms by buying only from reputable retailers. Counterfeit and pirated copies are incomplete and contain errors.   Read more",
		"created_at": "2024-06-01T16:32:48.309Z",
		"updated_at": null,
		"created_at_pt_br": "01/06/2024 13:32:48",
		"updated_at_pt_br": null
	},
	{
		"id": "f33c36d5-3446-424c-8846-f25b778336d6",
		"title": "Clean Code: A Handbook of Agile Software Craftsmanship",
		"slug": "clean-code-a-handbook-of-agile-software-craftsmanship",
		"cover_image": "https://m.media-amazon.com/images/I/41bOkXnNBjL._SY445_SX342_.jpg",
		"link_amazon": "https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882",
		"customer_reviews_link": "https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882#customerReviews",
		"subtitle": "1st Edition",
		"release_date": "August 1, 2008",
		"rating": {
			"score": "4.7",
			"total_customer_reviews": "6,180"
		},
		"author": {
			"id": "b4086187-fa05-4d01-9a02-e9b145b4884b",
			"name": "Robert C. Martin",
			"slug": "robert-c-martin"
		},
		"publisher": {
			"id": "78c8abec-9c6d-478d-8178-331e69a00503",
			"name": "Pearson",
			"slug": "pearson"
		},
		"summary": "Even bad code can function. But if code isn’t clean, it can bring a development organization to its knees. Every year, countless hours and significant resources are lost because of poorly written code. But it doesn’t have to be that way.  Noted software expert Robert C. Martin, presents a revolutionary paradigm with Clean Code: A Handbook of Agile Software Craftsmanship. Martin, who has helped bring agile principles from a practitioner’s point of view to tens of thousands of programmers, has teamed up with his colleagues from Object Mentor to distill their best agile practice of cleaning code “on the fly” into a book that will instill within you the values of software craftsman, and make you a better programmer―but only if you work at it.  What kind of work will you be doing? You’ll be reading code―lots of code. And you will be challenged to think about what’s right about that code, and what’s wrong with it. More importantly you will be challenged to reassess your professional values and your commitment to your craft.   Clean Codeis divided into three parts. The first describes the principles, patterns, and practices of writing clean code. The second part consists of several case studies of increasing complexity. Each case study is an exercise in cleaning up code―of transforming a code base that has some problems into one that is sound and efficient. The third part is the payoff: a single chapter containing a list of heuristics and “smells” gathered while creating the case studies. The result is a knowledge base that describes the way we think when we write, read, and clean code.  Readers will come away from this book understanding  How to tell the difference between good and bad code How to write good code and how to transform bad code into good code How to create good names, good functions, good objects, and good classes How to format code for maximum readability How to implement complete error handling without obscuring code logic How to unit test and practice test-driven development What “smells” and heuristics can help you identify bad codeThis book is a must for any developer, software engineer, project manager, team lead, or systems analyst with an interest in producing better code.     Read more",
		"created_at": "2024-06-01T16:32:51.098Z",
		"updated_at": null,
		"created_at_pt_br": "01/06/2024 13:32:51",
		"updated_at_pt_br": null
	},
	{
		"id": "70586963-0465-41f9-9110-0701d967ffef",
		"title": "System Design Interview – An Insider's Guide: Volume 2",
		"slug": "system-design-interview-an-insiders-guide-volume-2",
		"cover_image": "https://m.media-amazon.com/images/I/31DGQlzjQrL._SY445_SX342_.jpg",
		"link_amazon": "https://www.amazon.com/System-Design-Interview-Insiders-Guide/dp/1736049119",
		"customer_reviews_link": "https://www.amazon.com/System-Design-Interview-Insiders-Guide/dp/1736049119#customerReviews",
		"subtitle": "",
		"release_date": "March 11, 2022",
		"rating": {
			"score": "4.7",
			"total_customer_reviews": "1,144"
		},
		"author": {
			"id": "a86045a1-a93c-4afe-be3f-646366f42a71",
			"name": "Alex XuSahn Lam",
			"slug": "alex-xusahn-lam"
		},
		"publisher": {
			"id": "a8210570-ca40-49dc-b9f5-90703b59b486",
			"name": "",
			"slug": ""
		},
		"summary": "System Design Interview - An Insider's Guide (Volume 2)This book can be seen as a sequel to the book: System Design Interview - An Insider’s Guide. It covers a different set of system design interview questions and solutions. Although reading Volume 1 is helpful, it is not required. This book should be accessible to readers who have a basic understanding of distributed systems.This volume provides a reliable strategy and knowledge base for approaching a broad range of system design questions that you may encounter. It will help you feel confident during this important interview. This book provides a step-by-step framework for how to tackle a system design question. It also includes many real-world examples to illustrate a systematic approach, with detailed and well-explained steps you can follow.What’s inside?- An insider’s take on what interviewers really look for and why.- A 4-step framework for solving any system design interview question.- 13 real system design interview questions with detailed solutions.- 300+ diagrams to visually explain how different systems work.Table of ContentsChapter 1: Proximity ServiceChapter 2: Nearby FriendsChapter 3: Google MapsChapter 4: Distributed Message QueueChapter 5: Metrics MonitoringChapter 6: Ad Click Event AggregationChapter 7: Hotel ReservationChapter 8: Distributed Email ServiceChapter 9: S3-like Object StorageChapter 10: Real-time Gaming LeaderboardChapter 11: Payment SystemChapter 12: Digital WalletChapter 13: Stock Exchange   Read more",
		"created_at": "2024-06-01T16:32:53.477Z",
		"updated_at": null,
		"created_at_pt_br": "01/06/2024 13:32:53",
		"updated_at_pt_br": null
	},
	{
		"id": "bd07b1a9-efe0-4d5c-b0dd-550674c88112",
		"title": "System Design Interview – An insider's guide",
		"slug": "system-design-interview-an-insiders-guide",
		"cover_image": "https://m.media-amazon.com/images/I/31jY8GrqHtL._SY445_SX342_.jpg",
		"link_amazon": "https://www.amazon.com/System-Design-Interview-insiders-Second/dp/B08CMF2CQF",
		"customer_reviews_link": "https://www.amazon.com/System-Design-Interview-insiders-Second/dp/B08CMF2CQF#customerReviews",
		"subtitle": "",
		"release_date": "June 12, 2020",
		"rating": {
			"score": "4.6",
			"total_customer_reviews": "2,697"
		},
		"author": {
			"id": "578cc9ea-ab94-4ddd-97c0-d292ccf74cc1",
			"name": "Alex Xu",
			"slug": "alex-xu"
		},
		"publisher": {
			"id": "c87e4155-ede4-401a-adde-8fb6a4994f4b",
			"name": "",
			"slug": ""
		},
		"summary": "System Design Interview - An Insider's Guide (Volume 1)System design interviews are the most difficult to tackle of all technical interview questions. This book is Volume 1 of the System Design Interview - An insider’s guide series that provides a reliable strategy and knowledge base for approaching a broad range of system design questions. This book provides a step-by-step framework for how to tackle a system design question. It includes many real-world examples to illustrate the systematic approach, with detailed steps that you can follow.What’s inside?- An insider’s take on what interviewers really look for and why.- A 4-step framework for solving any system design interview question.- 16 real system design interview questions with detailed solutions.- 188 diagrams to visually explain how different systems work.Table Of ContentsChapter 1: Scale From Zero To Millions Of UsersChapter 2: Back-of-the-envelope EstimationChapter 3: A Framework For System Design InterviewsChapter 4: Design A Rate LimiterChapter 5: Design Consistent HashingChapter 6: Design A Key-value StoreChapter 7: Design A Unique Id Generator In Distributed SystemsChapter 8: Design A Url ShortenerChapter 9: Design A Web CrawlerChapter 10: Design A Notification SystemChapter 11: Design A News Feed SystemChapter 12: Design A Chat SystemChapter 13: Design A Search Autocomplete SystemChapter 14: Design YoutubeChapter 15: Design Google DriveChapter 16: The Learning Continues   Read more",
		"created_at": "2024-06-01T16:32:55.629Z",
		"updated_at": null,
		"created_at_pt_br": "01/06/2024 13:32:55",
		"updated_at_pt_br": null
	},
	{
		"id": "b5d1a854-f0b8-4508-9df2-777e64cd3ff0",
		"title": "Mythical Man-Month, The: Essays on Software Engineering, Anniversary Edition",
		"slug": "mythical-man-month-the-essays-on-software-engineering-anniversary-edition",
		"cover_image": "https://m.media-amazon.com/images/I/51F7U9MLGXL._SY445_SX342_.jpg",
		"link_amazon": "https://www.amazon.com/Mythical-Man-Month-Software-Engineering-Anniversary/dp/0201835959",
		"customer_reviews_link": "https://www.amazon.com/Mythical-Man-Month-Software-Engineering-Anniversary/dp/0201835959#customerReviews",
		"subtitle": "Anniversary Edition",
		"release_date": "August 2, 1995",
		"rating": {
			"score": "4.5",
			"total_customer_reviews": "1,618"
		},
		"author": {
			"id": "23278805-ca69-47eb-ba15-8cbe4459f1cc",
			"name": "Frederick Brooks Jr.",
			"slug": "frederick-brooks-jr"
		},
		"publisher": {
			"id": "8cfca7ec-f54d-4d1b-9cba-829a0494c68e",
			"name": "Addison-Wesley Professional",
			"slug": "addison-wesley-professional"
		},
		"summary": "Few books on software project management have been as influential and timeless as The Mythical Man-Month. With a blend of software engineering facts and thought-provoking opinions, Fred Brooks offers insight for anyone managing complex projects. These essays draw from his experience as project manager for the IBM System/360 computer family and then for OS/360, its massive software system. Now, 20 years after the initial publication of his book, Brooks has revisited his original ideas and added new thoughts and advice, both for readers already familiar with his work and for readers discovering it for the first time.The added chapters contain (1) a crisp condensation of all the propositions asserted in the original book, including Brooks' central argument in The Mythical Man-Month: that large programming projects suffer management problems different from small ones due to the division of labor; that the conceptual integrity of the product is therefore critical; and that it is difficult but possible to achieve this unity; (2) Brooks' view of these propositions a generation later; (3) a reprint of his classic 1986 paper \"No Silver Bullet\"; and (4) today's thoughts on the 1986 assertion, \"There will be no silver bullet within ten years.\"   Read more",
		"created_at": "2024-06-01T16:32:58.695Z",
		"updated_at": null,
		"created_at_pt_br": "01/06/2024 13:32:58",
		"updated_at_pt_br": null
	},
	{
		"id": "9827d9cd-56b4-4bb5-bbab-30e5fc4dd181",
		"title": "Clean Architecture: A Craftsman's Guide to Software Structure and Design (Robert C. Martin Series)",
		"slug": "clean-architecture-a-craftsmans-guide-to-software-structure-and-design-robert-c-martin-series",
		"cover_image": "https://m.media-amazon.com/images/I/41tjPqycZ1L._SY445_SX342_.jpg",
		"link_amazon": "https://www.amazon.com/Clean-Architecture-Craftsmans-Software-Structure/dp/0134494164",
		"customer_reviews_link": "https://www.amazon.com/Clean-Architecture-Craftsmans-Software-Structure/dp/0134494164#customerReviews",
		"subtitle": "1st Edition",
		"release_date": "September 10, 2017",
		"rating": {
			"score": "4.6",
			"total_customer_reviews": "3,393"
		},
		"author": {
			"id": "de88d26e-b6ae-4aa9-8b52-18d895a676ba",
			"name": "Robert Martin",
			"slug": "robert-martin"
		},
		"publisher": {
			"id": "6aa9597c-a527-46bc-9755-f1428e7f6ba4",
			"name": "",
			"slug": ""
		},
		"summary": "Practical Software Architecture Solutions from the Legendary Robert C. Martin (“Uncle Bob”)By applying universal rules of software architecture, you can dramatically improve developer productivity throughout the life of any software system. Now, building upon the success of his best-selling books Clean Code and The Clean Coder, legendary software craftsman Robert C. Martin (“Uncle Bob”) reveals those rules and helps you apply them.Martin’s Clean Architecture doesn’t merely present options. Drawing on over a half-century of experience in software environments of every imaginable type, Martin tells you what choices to make and why they are critical to your success. As you’ve come to expect from Uncle Bob, this book is packed with direct, no-nonsense solutions for the real challenges you’ll face–the ones that will make or break your projects.Learn what software architects need to achieve–and core disciplines and practices for achieving itMaster essential software design principles for addressing function, component separation, and data managementSee how programming paradigms impose discipline by restricting what developers can doUnderstand what’s critically important and what’s merely a “detail”Implement optimal, high-level structures for web, database, thick-client, console, and embedded applicationsDefine appropriate boundaries and layers, and organize components and servicesSee why designs and architectures go wrong, and how to prevent (or fix) these failuresClean Architecture is essential reading for every current or aspiring software architect, systems analyst, system designer, and software manager–and for every programmer who must execute someone else’s designs.  Register your book for convenient access to downloads, updates, and/or corrections as they become available. See inside book for details.   Read more",
		"created_at": "2024-06-01T16:33:01.190Z",
		"updated_at": null,
		"created_at_pt_br": "01/06/2024 13:33:01",
		"updated_at_pt_br": null
	},
	{
		"id": "c7398b5b-60cc-4147-8eb4-67881c0a87b6",
		"title": "Communication for Engineers: A framework for software developers to become better communicators and increase their happiness, productivity, and impact",
		"slug": "communication-for-engineers-a-framework-for-software-developers-to-become-better-communicators-and-increase-their-happiness-productivity-and-impact",
		"cover_image": "https://m.media-amazon.com/images/I/41RNUljKSSL._SY445_SX342_.jpg",
		"link_amazon": "https://www.amazon.com/Communication-Engineers-developers-communicators-productivity-ebook/dp/B08W8MJNF8",
		"customer_reviews_link": "https://www.amazon.com/Communication-Engineers-developers-communicators-productivity-ebook/dp/B08W8MJNF8#customerReviews",
		"subtitle": "Kindle Edition",
		"release_date": "March 31, 2021",
		"rating": {
			"score": "4.2",
			"total_customer_reviews": "28"
		},
		"author": {
			"id": "3ff5946c-4127-44e0-a56e-613d860b0b86",
			"name": "Chris Laffra",
			"slug": "chris-laffra"
		},
		"publisher": {
			"id": "0cf5c08c-6da7-40eb-8f2a-73b42f6565ca",
			"name": "",
			"slug": ""
		},
		"summary": "This book was written by a software engineer for software engineers. It provides an overview of various communication skills and techniques that are relevant to people working in the software industry. Some of the communications skills discussed in this book have a generic nature, such as self-awareness. Others are more specific for engineers, such as writing clean code. The result is a comprehensive coverage of communication as it concerns software engineers with many practical and relevant tips to follow. The book sometimes focuses on communication between engineers and at other times, it explores how to interact with others, typically in a business context. When we say \"engineers\" in this book, we generalize and refer to software engineers, programmers, developers, designers, engineering managers, PMs, software architects, or anyone else working in software development.In this book, each communication skill will be discussed with specific tips to help you improve in a well-structured, constructive, and productive fashion. The end goal is to increase your impact as an engineer by focusing on \"soft skills\" that complement your existing coding and problem solving skills.   Read more",
		"created_at": "2024-06-01T16:33:03.449Z",
		"updated_at": null,
		"created_at_pt_br": "01/06/2024 13:33:03",
		"updated_at_pt_br": null
	},
	{
		"id": "e0ecfb89-c372-4154-a179-3c681294ff03",
		"title": "Domain-Driven Design: Tackling Complexity in the Heart of Software",
		"slug": "domain-driven-design-tackling-complexity-in-the-heart-of-software",
		"cover_image": "https://m.media-amazon.com/images/I/41ni9tGguyL._SY445_SX342_.jpg",
		"link_amazon": "https://www.amazon.com/Domain-Driven-Design-Tackling-Complexity-Software/dp/0321125215",
		"customer_reviews_link": "https://www.amazon.com/Domain-Driven-Design-Tackling-Complexity-Software/dp/0321125215#customerReviews",
		"subtitle": "1st Edition",
		"release_date": "August 20, 2003",
		"rating": {
			"score": "4.6",
			"total_customer_reviews": "1,354"
		},
		"author": {
			"id": "0e514f1e-402b-4ab6-9491-b7b0b510621b",
			"name": "Eric Evans",
			"slug": "eric-evans"
		},
		"publisher": {
			"id": "60ee3aa5-e316-45de-998f-bcb994bc8cb7",
			"name": "Addison-Wesley Professional",
			"slug": "addison-wesley-professional"
		},
		"summary": "\"Eric Evans has written a fantastic book on how you can make the design of your software match your mental model of the problem domain you are addressing. \"His book is very compatible with XP. It is not about drawing pictures of a domain; it is about how you think of it, the language you use to talk about it, and how you organize your software to reflect your improving understanding of it. Eric thinks that learning about your problem domain is as likely to happen at the end of your project as at the beginning, and so refactoring is a big part of his technique. \"The book is a fun read. Eric has lots of interesting stories, and he has a way with words. I see this book as essential reading for software developers--it is a future classic.\" --Ralph Johnson, author of Design Patterns \"If you don't think you are getting value from your investment in object-oriented programming, this book will tell you what you've forgotten to do. \"Eric Evans convincingly argues for the importance of domain modeling as the central focus of development and provides a solid framework and set of techniques for accomplishing it. This is timeless wisdom, and will hold up long after the methodologies du jour have gone out of fashion.\" --Dave Collins, author of Designing Object-Oriented User Interfaces  \"Eric weaves real-world experience modeling--and building--business applications into a practical, useful book. Written from the perspective of a trusted practitioner, Eric's descriptions of ubiquitous language, the benefits of sharing models with users, object life-cycle management, logical and physical application structuring, and the process and results of deep refactoring are major contributions to our field.\" --Luke Hohmann, author of Beyond Software Architecture  \"This book belongs on the shelf of every thoughtful software developer.\" --Kent Beck \"What Eric has managed to capture is a part of the design process that experienced object designers have always used, but that we have been singularly unsuccessful as a group in conveying to the rest of the industry. We've given away bits and pieces of this knowledge...but we've never organized and systematized the principles of building domain logic. This book is important.\" --Kyle Brown, author of Enterprise Java(TM) Programming with IBM(R) WebSphere(R) The software development community widely acknowledges that domain modeling is central to software design. Through domain models, software developers are able to express rich functionality and translate it into a software implementation that truly serves the needs of its users. But despite its obvious importance, there are few practical resources that explain how to incorporate effective domain modeling into the software development process. Domain-Driven Design fills that need. This is not a book about specific technologies. It offers readers a systematic approach to domain-driven design, presenting an extensive set of design best practices, experience-based techniques, and fundamental principles that facilitate the development of software projects facing complex domains. Intertwining design and development practice, this book incorporates numerous examples based on actual projects to illustrate the application of domain-driven design to real-world software development. Readers learn how to use a domain model to make a complex development effort more focused and dynamic. A core of best practices and standard patterns provides a common language for the development team. A shift in emphasis--refactoring not just the code but the model underlying the code--in combination with the frequent iterations of Agile development leads to deeper insight into domains and enhanced communication between domain expert and programmer. Domain-Driven Design then builds on this foundation, and addresses modeling and design for complex systems and larger organizations.Specific topics covered include:Getting all team members to speak the same language Connecting model and implementation more deeply Sharpening key distinctions in a model Managing the lifecycle of a domain object Writing domain code that is safe to combine in elaborate ways Making complex code obvious and predictable Formulating a domain vision statement Distilling the core of a complex domain Digging out implicit concepts needed in the model Applying analysis patterns Relating design patterns to the model Maintaining model integrity in a large system Dealing with coexisting models on the same project Organizing systems with large-scale structures Recognizing and responding to modeling breakthroughs With this book in hand, object-oriented developers, system analysts, and designers will have the guidance they need to organize and focus their work, create rich and useful domain models, and leverage those models into quality, long-lasting software implementations.   Read more",
		"created_at": "2024-06-01T16:33:06.000Z",
		"updated_at": null,
		"created_at_pt_br": "01/06/2024 13:33:06",
		"updated_at_pt_br": null
	},
	{
		"id": "4023b31b-0680-436a-8a21-f48dd883aa98",
		"title": "Cracking the Coding Interview: 189 Programming Questions and Solutions (Cracking the Interview & Career)",
		"slug": "cracking-the-coding-interview-189-programming-questions-and-solutions-cracking-the-interview-and-career",
		"cover_image": "https://m.media-amazon.com/images/I/410hiaPGyCL._SY445_SX342_.jpg",
		"link_amazon": "https://www.amazon.com/Cracking-Coding-Interview-Programming-Questions/dp/0984782850",
		"customer_reviews_link": "https://www.amazon.com/Cracking-Coding-Interview-Programming-Questions/dp/0984782850#customerReviews",
		"subtitle": "6th Edition",
		"release_date": "July 1, 2015",
		"rating": {
			"score": "4.7",
			"total_customer_reviews": "9,014"
		},
		"author": {
			"id": "f6bb6649-306c-41d3-bce9-95fa60a29758",
			"name": "Gayle Laakmann McDowell",
			"slug": "gayle-laakmann-mcdowell"
		},
		"publisher": {
			"id": "981f9d1e-53c9-4fb8-9d10-4093a6e94825",
			"name": "",
			"slug": ""
		},
		"summary": "I am not a recruiter. I am a software engineer. And as such, I know what it's like to be asked to whip up brilliant algorithms on the spot and then write flawless code on a whiteboard. I've been through this as a candidate and as an interviewer.  Cracking the Coding Interview, 6th Edition is here to help you through this process, teaching you what you need to know and enabling you to perform at your very best. I've coached and interviewed hundreds of software engineers. The result is this book. Learn how to uncover the hints and hidden details in a question, discover how to break down a problem into manageable chunks, develop techniques to unstick yourself when stuck, learn (or re-learn) core computer science concepts, and practice on 189 interview questions and solutions. These interview questions are real; they are not pulled out of computer science textbooks. They reflect what's truly being asked at the top companies, so that you can be as prepared as possible. WHAT'S INSIDE?189 programming interview questions, ranging from the basics to the trickiest algorithm problems.A walk-through of how to derive each solution, so that you can learn how to get there yourself.Hints on how to solve each of the 189 questions, just like what you would get in a real interview.Five proven strategies to tackle algorithm questions, so that you can solve questions you haven't seen.Extensive coverage of essential topics, such as big O time, data structures, and core algorithms.A behind the scenes look at how top companies like Google and Facebook hire developers.Techniques to prepare for and ace the soft side of the interview: behavioral questions.For interviewers and companies: details on what makes a good interview question and hiring process.Illustrations noteIllustrations: Illustrations, black and white   Read more",
		"created_at": "2024-06-01T16:33:08.571Z",
		"updated_at": null,
		"created_at_pt_br": "01/06/2024 13:33:08",
		"updated_at_pt_br": null
	},
	{
		"id": "2fa4bbc4-62a5-43b6-aff8-1feadf668aea",
		"title": "Design Patterns: Elements of Reusable Object-Oriented Software",
		"slug": "design-patterns-elements-of-reusable-object-oriented-software",
		"cover_image": "https://m.media-amazon.com/images/I/51szD9HC9pL._SX342_SY445_.jpg",
		"link_amazon": "https://www.amazon.com/Design-Patterns-Elements-Reusable-Object-Oriented/dp/0201633612",
		"customer_reviews_link": "https://www.amazon.com/Design-Patterns-Elements-Reusable-Object-Oriented/dp/0201633612#customerReviews",
		"subtitle": "1st Edition",
		"release_date": "October 31, 1994",
		"rating": {
			"score": "4.7",
			"total_customer_reviews": "2,540"
		},
		"author": {
			"id": "69a3d7ea-5b01-44f1-9866-2077d3b816f4",
			"name": "Erich GammaRichard HelmRalph JohnsonJohn Vlissides",
			"slug": "erich-gammarichard-helmralph-johnsonjohn-vlissides"
		},
		"publisher": {
			"id": "3ba8bf48-4d14-4bca-9654-63dae54f1af8",
			"name": "Addison-Wesley Professional",
			"slug": "addison-wesley-professional"
		},
		"summary": "Capturing a wealth of experience about the design of object-oriented software, four top-notch designers present a catalog of simple and succinct solutions to commonly occurring design problems. Previously undocumented, these 23 patterns allow designers to create more flexible, elegant, and ultimately reusable designs without having to rediscover the design solutions themselves.  The authors begin by describing what patterns are and how they can help you design object-oriented software. They then go on to systematically name, explain, evaluate, and catalog recurring designs in object-oriented systems. With Design Patterns as your guide, you will learn how these important patterns fit into the software development process, and how you can leverage them to solve your own design problems most efficiently.  Each pattern describes the circumstances in which it is applicable, when it can be applied in view of other design constraints, and the consequences and trade-offs of using the pattern within a larger design. All patterns are compiled from real systems and are based on real-world examples. Each pattern also includes code that demonstrates how it may be implemented in object-oriented programming languages like C++ or Smalltalk.   Read more",
		"created_at": "2024-06-01T16:33:11.603Z",
		"updated_at": null,
		"created_at_pt_br": "01/06/2024 13:33:11",
		"updated_at_pt_br": null
	},
	{
		"id": "e65cbd6d-8a7a-457d-aadb-c00f2c8bf3f4",
		"title": "Refactoring: Improving the Design of Existing Code (2nd Edition) (Addison-Wesley Signature Series (Fowler))",
		"slug": "refactoring-improving-the-design-of-existing-code-2nd-edition-addison-wesley-signature-series-fowler",
		"cover_image": "https://m.media-amazon.com/images/I/41JgRyJbGSL._SX342_SY445_.jpg",
		"link_amazon": "https://www.amazon.com/Refactoring-Improving-Existing-Addison-Wesley-Signature/dp/0134757599",
		"customer_reviews_link": "https://www.amazon.com/Refactoring-Improving-Existing-Addison-Wesley-Signature/dp/0134757599#customerReviews",
		"subtitle": "2nd Edition",
		"release_date": "November 30, 2018",
		"rating": {
			"score": "4.7",
			"total_customer_reviews": "1,028"
		},
		"author": {
			"id": "24a903b7-28bb-4ae2-908a-fe21ff3bbf58",
			"name": "Martin Fowler",
			"slug": "martin-fowler"
		},
		"publisher": {
			"id": "bcb652be-5aef-41d6-8546-e7270d249d01",
			"name": "Addison-Wesley Professional",
			"slug": "addison-wesley-professional"
		},
		"summary": "\"Whenever you read [Refactoring], it’s time to read it again. And if you haven’t read it yet, please do before writing another line of code.\"  –David Heinemeier Hansson, Creator of Ruby on Rails, Founder & CTO at Basecamp   Fully Revised and Updated—Includes New Refactoring's and Code Examples“Any fool can write code that a computer can understand. Good programmers write code that humans can understand.”  –M. Fowler (1999)For more than twenty years, experienced programmers worldwide have relied on Martin Fowler’s Refactoring to improve the design of existing code and to enhance software maintainability, as well as to make existing code easier to understand.   This eagerly awaited new edition has been fully updated to reflect crucial changes in the programming landscape. Refactoring, Second Edition, features an updated catalog of refactoring's and includes JavaScript code examples, as well as new functional examples that demonstrate refactoring without classes.  Like the original, this edition explains what refactoring is; why you should refactor; how to recognize code that needs refactoring; and how to actually do it successfully, no matter what language you use.Understand the process and general principles of refactoringQuickly apply useful refactorings to make a program easier to comprehend and changeRecognize “bad smells” in code that signal opportunities to refactorExplore the refactorings, each with explanations, motivation, mechanics, and simple examplesBuild solid tests for your refactoringsRecognize tradeoffs and obstacles to refactoringIncludes free access to the canonical web edition, with even more refactoring resources. (See inside the book for details about how to access the web edition.)   Read more",
		"created_at": "2024-06-01T16:33:13.980Z",
		"updated_at": null,
		"created_at_pt_br": "01/06/2024 13:33:13",
		"updated_at_pt_br": null
	},
	{
		"id": "5201ce49-6764-4405-a50f-3fe31ff87a46",
		"title": "Software Engineering at Google: Lessons Learned from Programming Over Time",
		"slug": "software-engineering-at-google-lessons-learned-from-programming-over-time",
		"cover_image": "https://m.media-amazon.com/images/I/410MEGnUOCL._SY445_SX342_.jpg",
		"link_amazon": "https://www.amazon.com/Software-Engineering-Google-Lessons-Programming/dp/1492082791",
		"customer_reviews_link": "https://www.amazon.com/Software-Engineering-Google-Lessons-Programming/dp/1492082791#customerReviews",
		"subtitle": "1st Edition",
		"release_date": "April 7, 2020",
		"rating": {
			"score": "4.6",
			"total_customer_reviews": "707"
		},
		"author": {
			"id": "abb48533-ca8f-44b2-976d-a9ce6eab8643",
			"name": "Titus WintersTom ManshreckHyrum Wright",
			"slug": "titus-winterstom-manshreckhyrum-wright"
		},
		"publisher": {
			"id": "44df1ed9-b4b4-4a6f-8f77-4c43066fedf0",
			"name": "O'Reilly Media",
			"slug": "oreilly-media"
		},
		"summary": "Today, software engineers need to know not only how to program effectively but also how to develop proper engineering practices to make their codebase sustainable and healthy. This book emphasizes this difference between programming and software engineering.How can software engineers manage a living codebase that evolves and responds to changing requirements and demands over the length of its life? Based on their experience at Google, software engineers Titus Winters and Hyrum Wright, along with technical writer Tom Manshreck, present a candid and insightful look at how some of the world’s leading practitioners construct and maintain software. This book covers Google’s unique engineering culture, processes, and tools and how these aspects contribute to the effectiveness of an engineering organization.You’ll explore three fundamental principles that software organizations should keep in mind when designing, architecting, writing, and maintaining code:How time affects the sustainability of software and how to make your code resilient over timeHow scale affects the viability of software practices within an engineering organizationWhat trade-offs a typical engineer needs to make when evaluating design and development decisions.   Read more",
		"created_at": "2024-06-01T16:33:16.525Z",
		"updated_at": null,
		"created_at_pt_br": "01/06/2024 13:33:16",
		"updated_at_pt_br": null
	},
	{
		"id": "51f0abc7-5a14-4df9-91a9-d8f32e4cfed7",
		"title": "Staff Engineer: Leadership beyond the management track",
		"slug": "staff-engineer-leadership-beyond-the-management-track",
		"cover_image": "https://m.media-amazon.com/images/I/41FktfXuNIL._SY445_SX342_.jpg",
		"link_amazon": "https://www.amazon.com/Staff-Engineer-Leadership-beyond-management/dp/1736417916",
		"customer_reviews_link": "https://www.amazon.com/Staff-Engineer-Leadership-beyond-management/dp/1736417916#customerReviews",
		"subtitle": "Paperback – January 31, 2021",
		"release_date": "January 31, 2021",
		"rating": {
			"score": "4.5",
			"total_customer_reviews": "966"
		},
		"author": {
			"id": "7753c373-54a4-4891-9ff6-6c5045456772",
			"name": "Will Larson",
			"slug": "will-larson"
		},
		"publisher": {
			"id": "ddb0befd-9979-441b-8a1a-76dee931c29a",
			"name": "",
			"slug": ""
		},
		"summary": "At most technology companies, you'll reach Senior software engineer, the career level for software engineers, in five to eight years. At the career level, your company's career ladder won't require that you work towards the next promotion; being promoted further is an exception rather than expected. This is also when many engineers are first given an opportunity to move into engineering management. Over the past few years, we've seen a flurry of books unlocking the engineering management career path, like Camille Fournier's The Manager's Path, Julie Zhuo's The Making of a Manager, Lara Hogan's Resilient Management, and even my own An Elegant Puzzle. The engineering management career isn't an easy one, but there are maps available to help navigate it. What if you want to advance your career without becoming an engineering manager? The technical leadership path remains relatively undocumented, hard to navigate, and inconsistent across companies. Staff Engineer is your guide to building your career towards a Staff engineering role, receiving the title, and succeeding within the role.   Read more",
		"created_at": "2024-06-01T16:33:18.881Z",
		"updated_at": null,
		"created_at_pt_br": "01/06/2024 13:33:18",
		"updated_at_pt_br": null
	},
	{
		"id": "a2e0f3de-4b9b-49e2-85b8-c25d754d34c9",
		"title": "The Software Engineer's Guidebook: Navigating senior, tech lead, and staff engineer positions at tech companies and startups",
		"slug": "the-software-engineers-guidebook-navigating-senior-tech-lead-and-staff-engineer-positions-at-tech-companies-and-startups",
		"cover_image": "https://m.media-amazon.com/images/I/41EwCpJH-FL._SY445_SX342_.jpg",
		"link_amazon": "https://www.amazon.com/Software-Engineers-Guidebook-Navigating-positions/dp/908338182X",
		"customer_reviews_link": "https://www.amazon.com/Software-Engineers-Guidebook-Navigating-positions/dp/908338182X#customerReviews",
		"subtitle": "",
		"release_date": "November 3, 2023",
		"rating": {
			"score": "4.7",
			"total_customer_reviews": "228"
		},
		"author": {
			"id": "b22ee23a-4ec7-4aee-8c59-cfd36cd82f9c",
			"name": "Gergely Orosz",
			"slug": "gergely-orosz"
		},
		"publisher": {
			"id": "a07524d6-a62e-457f-a9f5-b4439674169a",
			"name": "",
			"slug": ""
		},
		"summary": "In my first few years as a developer I assumed that hard work was all I needed. Then I was passed over for a promotion and my manager couldn’t give me feedback on what areas to improve, so I could get to the senior engineer level. I was frustrated; even bitter: not as much about missing the promotion, but because of the lack of guidance.By the time I became a manager, I was determined to support engineers reporting to me with the kind of feedback and support I wish I would have gotten years earlier. And I did. While my team tripled over the next two years, people became visibly better engineers, and this progression was clear from performance reviews and promotions.This book is a summary of the advice I’ve given to software engineers over the years – and then some more.This book follows the structure of a “typical” career path for a software engineer, from starting out as a fresh-faced software developer, through being a role model senior/lead, all the way to the staff/principle/distinguished level. It summarizes what I’ve learned as a developer and how I’ve approached coaching engineers at different stages of their careers.We cover “soft” skills which become increasingly important as your seniority increases, and the “hard” parts of the job, like software engineering concepts and approaches which help you grow professionally.The names of levels and their expectations can – and do! – vary across companies. The higher “tier” a business is, the more tends to be expected of engineers, compared to lower tier places. For example, the “senior engineer” level has notoriously high expectations at Google (L5 level) and Meta (E5 level,) compared to lower-tier companies. If you work at a higher-tier business, it may be useful to read the chapters about higher levels, and not only the level you’re currently interested in.The book is composed of six standalone parts, each made up of several chapters:Part 1: Developer Career FundamentalsPart 2: The Competent Software DeveloperPart 3: The Well-Rounded Senior EngineerPart 4: The Pragmatic Tech LeadPart 5: Role Model Staff and Principal EngineersPart 6: ConclusionParts 1 and 6 apply to all engineering levels, from entry-level software developer, to principal-and-above engineer. Parts 2, 3, 4, and 5 cover increasingly senior engineering levels and group together topics in chapters, such as “Software Engineering,” “Collaboration,” “Getting Things Done,” etc.Naming and levels vary, but the principles of what makes a great engineer who is impactful at the individual, team, and organizational levels, are remarkably constant. No matter where you are in your career, I hope this book provides a fresh perspective and new ideas on how to grow as an engineer.Praise for the book“From performance reviews to P95 latency, from team dynamics to testing, Gergely demystifies all aspects of a software career. This book is well named: it really does feel like the missing guidebook for the whole industry.”– Tanya Reilly, senior principal engineer and author of The Staff Engineer's Path\"Spanning a huge range of topics from technical to social in a concise manner, this belongs on the desk of any software engineer looking to grow their impact and their career. You'll reach for it again and again for sage advice in any situation.\"– James Stanier, Director of Engineering at Shopify, author of TheEngineeringManager.com   Read more",
		"created_at": "2024-06-01T16:33:21.100Z",
		"updated_at": null,
		"created_at_pt_br": "01/06/2024 13:33:21",
		"updated_at_pt_br": null
	},
	{
		"id": "89b2191d-7f17-4830-b13f-3c79af86bfa0",
		"title": "The Staff Engineer's Path: A Guide for Individual Contributors Navigating Growth and Change",
		"slug": "the-staff-engineers-path-a-guide-for-individual-contributors-navigating-growth-and-change",
		"cover_image": "https://m.media-amazon.com/images/I/41xIo0wtd-L._SY445_SX342_.jpg",
		"link_amazon": "https://www.amazon.com/Staff-Engineers-Path-Individual-Contributors/dp/1098118731",
		"customer_reviews_link": "https://www.amazon.com/Staff-Engineers-Path-Individual-Contributors/dp/1098118731#customerReviews",
		"subtitle": "1st Edition",
		"release_date": "October 25, 2022",
		"rating": {
			"score": "4.6",
			"total_customer_reviews": "437"
		},
		"author": {
			"id": "906a675b-db72-4ff8-96e9-a1020df78947",
			"name": "Tanya Reilly",
			"slug": "tanya-reilly"
		},
		"publisher": {
			"id": "0d3d8f38-2c2b-4a52-94fc-b9f98a4aee7c",
			"name": "O'Reilly Media",
			"slug": "oreilly-media"
		},
		"summary": "For years, companies have rewarded their most effective engineers with management positions. But treating management as the default path for an engineer with leadership ability doesn't serve the industry well--or the engineer. The staff engineer's path allows engineers to contribute at a high level as role models, driving big projects, determining technical strategy, and raising everyone's skills.  This in-depth book shows you how to understand your role, manage your time, master strategic thinking, and set the standard for technical work. You'll read about how to be a leader without direct authority, how to plan ahead to make the right technical decisions, and how to make everyone around you better, while still growing as an expert in your domain.  By exploring the three pillars of a staff engineer's job, Tanya Reilly, a veteran of the staff engineer track, shows you how to: Take a broad, strategic view when thinking about your work Dive into practical tactics for making projects succeed Determine what \"good engineering\" means in your organization    Read more",
		"created_at": "2024-06-01T16:33:23.411Z",
		"updated_at": null,
		"created_at_pt_br": "01/06/2024 13:33:23",
		"updated_at_pt_br": null
	},
	{
		"id": "c7340316-3668-496e-8006-21a10afde05d",
		"title": "The Pragmatic Programmer: From Journeyman to Master",
		"slug": "the-pragmatic-programmer-from-journeyman-to-master",
		"cover_image": "https://m.media-amazon.com/images/I/41a1DYaecZL._SX342_SY445_.jpg",
		"link_amazon": "https://www.amazon.com/Pragmatic-Programmer-Journeyman-Master/dp/020161622X",
		"customer_reviews_link": "https://www.amazon.com/Pragmatic-Programmer-Journeyman-Master/dp/020161622X#customerReviews",
		"subtitle": "",
		"release_date": "January 1, 1999",
		"rating": {
			"score": "4.6",
			"total_customer_reviews": "1,462"
		},
		"author": {
			"id": "f82984b3-01c8-40f3-9bdf-c56f6c0182bb",
			"name": "Andrew HuntDavid Thomas",
			"slug": "andrew-huntdavid-thomas"
		},
		"publisher": {
			"id": "79d111c9-9b21-4b73-8c30-9835ca035fff",
			"name": "Addison-Wesley Professional",
			"slug": "addison-wesley-professional"
		},
		"summary": "Ward Cunningham Straight from the programming trenches, The Pragmatic Programmer cuts through the increasing specialization and technicalities of modern software development to examine the core process--taking a requirement and producing working, maintainable code that delights its users. It covers topics ranging from personal responsibility and career development to architectural techniques for keeping your code flexible and easy to adapt and reuse. Read this book, and you’ll learn how to Fight software rot; Avoid the trap of duplicating knowledge; Write flexible, dynamic, and adaptable code; Avoid programming by coincidence; Bullet-proof your code with contracts, assertions, and exceptions; Capture real requirements; Test ruthlessly and effectively; Delight your users; Build teams of pragmatic programmers; and Make your developments more precise with automation. Written as a series of self-contained sections and filled with entertaining anecdotes, thoughtful examples, and interesting analogies, The Pragmatic Programmer illustrates the best practices and major pitfalls of many different aspects of software development. Whether you’re a new coder, an experienced program.   Read more",
		"created_at": "2024-06-01T16:33:25.753Z",
		"updated_at": null,
		"created_at_pt_br": "01/06/2024 13:33:25",
		"updated_at_pt_br": null
	},
	{
		"id": "627eb6d1-559b-4bec-81cd-37bf7cb3b869",
		"title": "How to Win Friends & Influence People (Dale Carnegie Books)",
		"slug": "how-to-win-friends-and-influence-people-dale-carnegie-books",
		"cover_image": "https://m.media-amazon.com/images/I/41OksZQYt+L._SY445_SX342_.jpg",
		"link_amazon": "https://www.amazon.com/How-Win-Friends-Influence-People/dp/0671027034",
		"customer_reviews_link": "https://www.amazon.com/How-Win-Friends-Influence-People/dp/0671027034#customerReviews",
		"subtitle": "Paperback – October 1, 1998",
		"release_date": "October 1, 1998",
		"rating": {
			"score": "4.7",
			"total_customer_reviews": "32,296"
		},
		"author": {
			"id": "d2cea13e-a762-4b0e-bca1-cd7301704d84",
			"name": "Dale Carnegie",
			"slug": "dale-carnegie"
		},
		"publisher": {
			"id": "412142e6-7f8b-4e0c-b055-748b07d7d278",
			"name": "Pocket Books",
			"slug": "pocket-books"
		},
		"summary": "You can go after the job you want—and get it!  You can take the job you have—and improve it!  You can take any situation—and make it work for you!  Dale Carnegie’s rock-solid, time-tested advice has carried countless people up the ladder of success in their business and personal lives. One of the most groundbreaking and timeless bestsellers of all time, How to Win Friends & Influence People will teach you:  -Six ways to make people like you  -Twelve ways to win people to your way of thinking  -Nine ways to change people without arousing resentment  And much more! Achieve your maximum potential—a must-read for the twenty-first century with more than 15 million copies sold!    Read more",
		"created_at": "2024-06-01T16:33:29.246Z",
		"updated_at": null,
		"created_at_pt_br": "01/06/2024 13:33:29",
		"updated_at_pt_br": null
	},
	{
		"id": "f48fd392-cbfa-4855-81e1-fd005cffa530",
		"title": "The Phoenix Project: A Novel about IT, DevOps, and Helping Your Business Win",
		"slug": "the-phoenix-project-a-novel-about-it-devops-and-helping-your-business-win",
		"cover_image": "https://m.media-amazon.com/images/I/51QYeIxvwgL._SY445_SX342_.jpg",
		"link_amazon": "https://www.amazon.com/Phoenix-Project-DevOps-Helping-Business/dp/1942788290",
		"customer_reviews_link": "https://www.amazon.com/Phoenix-Project-DevOps-Helping-Business/dp/1942788290#customerReviews",
		"subtitle": "Paperback – Illustrated, February 27, 2018",
		"release_date": "February 27, 2018",
		"rating": {
			"score": "4.6",
			"total_customer_reviews": "20,423"
		},
		"author": {
			"id": "abe844a4-4b45-4387-80d0-f576368e0f9e",
			"name": "Gene KimKevin BehrGeorge Spafford",
			"slug": "gene-kimkevin-behrgeorge-spafford"
		},
		"publisher": {
			"id": "7e8bcd87-df50-40f0-baff-7da392ee49b5",
			"name": "IT Revolution Press",
			"slug": "it-revolution-press"
		},
		"summary": "***Over a half-million sold! And available now, the Wall Street Journal Bestselling sequel The Unicorn Project***“Every person involved in a failed IT project should be forced to read this book.”―TIM O'REILLY, Founder & CEO of O'Reilly Media“The Phoenix Project is a must read for business and IT executives who are struggling with the growing complexity of IT.”―JIM WHITEHURST, President and CEO, Red Hat, Inc.Five years after this sleeper hit took on the world of IT and flipped it on it's head, the 5th Anniversary Edition of The Phoenix Project continues to guide IT in the DevOps revolution.In this newly updated and expanded edition of the bestselling The Phoenix Project, co-author Gene Kim includes a new afterword and a deeper delve into the Three Ways as described in The DevOps Handbook.Bill, an IT manager at Parts Unlimited, has been tasked with taking on a project critical to the future of the business, code named Phoenix Project. But the project is massively over budget and behind schedule. The CEO demands Bill must fix the mess in ninety days or else Bill's entire department will be outsourced.With the help of a prospective board member and his mysterious philosophy of The Three Ways, Bill starts to see that IT work has more in common with a manufacturing plant work than he ever imagined. With the clock ticking, Bill must organize work flow streamline interdepartmental communications, and effectively serve the other business functions at Parts Unlimited.In a fast-paced and entertaining style, three luminaries of the DevOps movement deliver a story that anyone who works in IT will recognize. Readers will not only learn how to improve their own IT organizations, they'll never view IT the same way again.“This book is a gripping read that captures brilliantly the dilemmas that face companies which depend on IT, and offers real-world solutions.”―JEZ HUMBLE, Co-author of Continuous Delivery, Lean Enterprise, Accelerate, and The DevOps Handbook   Read more",
		"created_at": "2024-06-01T16:33:32.533Z",
		"updated_at": null,
		"created_at_pt_br": "01/06/2024 13:33:32",
		"updated_at_pt_br": null
	},
	{
		"id": "7ef68af0-f76b-4dd5-986a-73b3376001d2",
		"title": "The Unicorn Project: A Novel About Developers, Digital Disruption, and Thriving in the Age of Data",
		"slug": "the-unicorn-project-a-novel-about-developers-digital-disruption-and-thriving-in-the-age-of-data",
		"cover_image": "https://m.media-amazon.com/images/I/51+3lvlXNuL._SY300_SX300_.jpg",
		"link_amazon": "https://www.amazon.com/The-Unicorn-Project-Gene-Kim-audiobook/dp/B0812C82T9",
		"customer_reviews_link": "https://www.amazon.com/The-Unicorn-Project-Gene-Kim-audiobook/dp/B0812C82T9#customerReviews",
		"subtitle": "",
		"release_date": "November 26, 2019",
		"rating": {
			"score": "4.5",
			"total_customer_reviews": "4,474"
		},
		"author": {
			"id": "36b53667-e971-47e6-acff-e736d55094bc",
			"name": "Gene Kim",
			"slug": "gene-kim"
		},
		"publisher": {
			"id": "17932c7a-58ef-49e8-a964-00dc7a5d4aac",
			"name": "IT Revolution Press",
			"slug": "it-revolution-press"
		},
		"summary": "The Phoenix Project wowed over a half-million readers. Now comes The Unicorn Project!“The Unicorn Project is amazing, and I loved it 100 times more than The Phoenix Project…” (Fernando Cornago, senior director platform engineering, Adidas)“Gene Kim does a masterful job of showing how … the efforts of many create lasting business advantages for all.” (Dr. Steven Spear, author of The High-Velocity Edge, sr. lecturer at MIT, and principal of HVE LLC)“The Unicorn Project is so clever, so good, so crazy enlightening!” (Cornelia Davis, vice president of technology at Pivotal Software, Inc., author of Cloud Native Patterns)This highly anticipated follow-up to the best-selling title The Phoenix Project takes another look at Parts Unlimited, this time from the perspective of software development. In The Unicorn Project, we follow Maxine, a senior lead developer and architect, as she is exiled to the Phoenix Project, to the horror of her friends and colleagues, as punishment for contributing to a payroll outage. She tries to survive in what feels like a heartless and uncaring bureaucracy and to work within a system where no one can get anything done without endless committees, paperwork, and approvals. One day, she is approached by a ragtag bunch of misfits who say they want to overthrow the existing order, to liberate developers, to bring joy back to technology work, and to enable the business to win in a time of digital disruption. To her surprise, she finds herself drawn ever further into this movement, eventually becoming one of the leaders of the Rebellion, which puts her in the crosshairs of some familiar and very dangerous enemies. The Age of Software is here, and another mass extinction event looms - this is a story about rebel developers and business leaders working together, racing against time to innovate, survive, and thrive in a time of unprecedented uncertainty...and opportunity.    Read more",
		"created_at": "2024-06-01T16:33:34.861Z",
		"updated_at": null,
		"created_at_pt_br": "01/06/2024 13:33:34",
		"updated_at_pt_br": null
	},
	{
		"id": "7a64d918-c774-425b-8fae-e93ba93a85cc",
		"title": "Art of Computer Programming, The, Volumes 1-4B, Boxed Set (Art of Computer Programming, 1-4)",
		"slug": "art-of-computer-programming-the-volumes-1-4b-boxed-set-art-of-computer-programming-1-4",
		"cover_image": "https://m.media-amazon.com/images/I/41F3TgFTpVL._SX342_SY445_.jpg",
		"link_amazon": "https://www.amazon.com/Computer-Programming-Volumes-1-4B-Boxed/dp/0137935102",
		"customer_reviews_link": "https://www.amazon.com/Computer-Programming-Volumes-1-4B-Boxed/dp/0137935102#customerReviews",
		"subtitle": "1st Edition",
		"release_date": "October 15, 2022",
		"rating": {
			"score": "4.7",
			"total_customer_reviews": "125"
		},
		"author": {
			"id": "dcdc38f2-8ab6-4a7a-bbbe-1b5d3e82ab0d",
			"name": "Donald Knuth",
			"slug": "donald-knuth"
		},
		"publisher": {
			"id": "fdf9ffed-d982-451e-8266-3c66116e3d73",
			"name": "Addison-Wesley Professional",
			"slug": "addison-wesley-professional"
		},
		"summary": "Now Includes the Long-Anticipated Volume 4B!Countless readers have spoken about the profound personal influence of Knuth's work. Scientists have marveled at the beauty and elegance of his analysis, while ordinary programmers have successfully applied his \"cookbook\" solutions to their day-to-day problems. All have admired Knuth for the breadth, clarity, accuracy, and good humor found in his books.Primarily written as a reference, some people have nevertheless found it possible and interesting to read each volume from beginning to end. A programmer in China even compared the experience to reading a poem. Whatever your background, if you need to do any serious computer programming, you will find your own good reason to make each volume in this series a readily accessible part of your scholarly or professional library.These five books comprise what easily could be the most important set of information on any serious programmer's bookshelf.This set now includes Volume 4B, the sequel to Volume 4A, which extends Knuth's exploration of combinatorial algorithms. These algorithms are of keen interest to software designers because \". . . a single good idea can save years or even centuries of computer time.\"\"Donald Knuth may very well be a great master of the analysis of algorithms, but more than that, he is an incredible and tireless storyteller who always strikes the perfect balance between theory, practice, and fun. [The Art of Computer Programming, Volume 4B, Combinatorial Algorithms, Part 2,] dives deep into the fascinating exploration of search spaces (which is quite like looking for a needle in a haystack or, even harder, to prove the absence of a needle in a haystack), where actions performed while moving forward must be meticulously undone when backtracking. It introduces us to the beauty of dancing links for removing and restoring the cells of a matrix in a dance which is both simple to implement and very efficient. And it studies the iconic and versatile satisfiability problem and carefully analyses various ingredients of SAT solvers.\" --Christine Solnon, Department of Computer Science, INSA LyonThis box set includes the following volumes: The Art of Computer Programming: Volume 1: Fundamental Algorithms, 3rd EditionThe Art of Computer Programming, Volume 2: Seminumerical Algorithms, 3rd EditionThe Art of Computer Programming: Volume 3: Sorting and Searching, 2nd EditionThe Art of Computer Programming, Volume 4A: Combinatorial Algorithms, Part 1The Art of Computer Programming, Volume 4B: Combinatorial Algorithms, Part 2   Read more",
		"created_at": "2024-06-01T16:33:37.236Z",
		"updated_at": null,
		"created_at_pt_br": "01/06/2024 13:33:37",
		"updated_at_pt_br": null
	}
]